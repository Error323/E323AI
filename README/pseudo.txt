void function findSpots
	while (true)
		metalSpots = false
		highestSaturation = 0
		k = 0
		bestCoverage = [radius*radius]
		bestX = -1
		bestZ = -1
		
		for z=radius to Z-radius
			for x=radius to X-radius
				if (map[z*X+x] > threshold)
					metalSpots = true
					saturation = getSaturation(x, z, radius, &coverage, &k)
					
					if (saturation > highestSaturation)
						highestSaturation = saturation
						bestCoverage = coverage
						bestX = x
						bestZ = z
						bestK = k

		if (!metalSpots) break

		add(bestX, bestZ, highestSaturation)

		for i to bestK
			map[bestCoverage[i]] = 0




int function getSaturation(x, z, radius, *coverage, *k)
	sum = 0
	k = 0

	for i = z-radius to z+radius
		for j = x-radius to x+radius
			if (!inRadius(x, z, j, i, radius)) continue
			index = i*X+j
			sum += map[index]
			coverage[k++] = index
	
	return sum




bool function inRadius(x, z, j, i, radius)
	x' = x - j
	z' = z - i
	
	return sqrt(x'*x' + z'*z') <= radius
